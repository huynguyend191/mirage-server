{"version":3,"sources":["pages/default/Default.module.css","pages/default/RegisterModal.module.css","assets/flame-welcome.png","assets/app-logo.png","assets/welcome-student.png","assets/welcome-tutor.png","lib/utils/getAccountInfo.js","context/AccountContext.js","components/FooterContent.js","lib/utils/axiosConfig.js","pages/default/RegisterModal.js","pages/default/LoginModal.js","pages/default/Default.js","pages/student/Student.js","pages/tutor/Tutor.js","lib/constants.js","components/Router.js","App.js","serviceWorker.js","index.js","components/FooterContent.module.css","pages/default/LoginModal.module.css"],"names":["module","exports","cookies","Cookies","AccountContext","createContext","AccountContextProvider","props","useState","account","setAccount","useEffect","JSON","parse","localStorage","getItem","existAccount","accessToken","get","jwtDecode","getAccountInfo","Provider","value","onLogin","accountData","onLogout","Footer","className","styles","footerContent","contactIconContainer","GithubOutlined","contactIcon","style","fontSize","onClick","window","open","FacebookFilled","InstagramOutlined","contactInfoContainer","axiosRequest","axios","create","baseURL","withCredentials","RegisterModal","isStudent","setIsStudent","loading","setLoading","Form","useForm","form","useContext","onFinish","values","a","url","accountInfo","username","password","email","name","post","result","data","setItem","console","log","response","studentWelcome","registerWelcomeContent","welcomeImg","draggable","src","welcomeStudentImg","alt","tutorWelcome","welcomeTutorImg","visible","isVisible","footer","title","onCancel","resetFields","onClose","width","registerContent","registerWelcome","formWrapper","scrollToFirstError","registerForm","labelCol","xs","span","sm","wrapperCol","Item","label","rules","type","message","required","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","offset","htmlType","registerButton","shape","disabled","switchModeWrapper","switchMode","onSwitchLogin","LoginModal","onSwitchRegister","user","remember","loginForm","initialValues","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","loginForgot","href","loginButton","registerNow","Header","Layout","Content","Default","isRegister","setRegister","isLogin","setLogin","showRegister","showLogin","headerContent","headerWrapper","headerIcon","headerTitle","userButtonContainer","userButton","defaultBody","introContainer","introImg","introContent","welcomeText","welcomeDescription","Student","Tutor","ROLES","Object","freeze","ADMIN","TUTOR","STUDENT","Router","role","path","component","to","exact","App","Boolean","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c87bbafe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContent\":\"Default_headerContent__3c_AR\",\"headerWrapper\":\"Default_headerWrapper__BUe6U\",\"headerTitle\":\"Default_headerTitle__2FwYb\",\"headerIcon\":\"Default_headerIcon__187NW\",\"userButton\":\"Default_userButton__fph_C\",\"registerButton\":\"Default_registerButton__2UbXV\",\"userButtonContainer\":\"Default_userButtonContainer__85zRo\",\"defaultBody\":\"Default_defaultBody__1ZuJT\",\"introContainer\":\"Default_introContainer__U5vQA\",\"welcomeText\":\"Default_welcomeText__JSskc\",\"welcomeDescription\":\"Default_welcomeDescription__WsJCP\",\"introContent\":\"Default_introContent__2U9ZG\",\"introImg\":\"Default_introImg__34kCu\",\"becomeTutor\":\"Default_becomeTutor__3Ev_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerContent\":\"RegisterModal_registerContent__1IyVz\",\"registerWelcome\":\"RegisterModal_registerWelcome__FbIzJ\",\"registerForm\":\"RegisterModal_registerForm__2CZRj\",\"registerButton\":\"RegisterModal_registerButton__z1ulB\",\"formWrapper\":\"RegisterModal_formWrapper__4GBIy\",\"switchMode\":\"RegisterModal_switchMode__2h5aY\",\"switchModeWrapper\":\"RegisterModal_switchModeWrapper__2XhUs\",\"welcomeImg\":\"RegisterModal_welcomeImg__Ktazu\",\"registerWelcomeContent\":\"RegisterModal_registerWelcomeContent__2mKlf\"};","module.exports = __webpack_public_path__ + \"static/media/flame-welcome.2b090893.png\";","module.exports = __webpack_public_path__ + \"static/media/app-logo.05772604.png\";","module.exports = __webpack_public_path__ + \"static/media/welcome-student.0c7630e5.png\";","module.exports = __webpack_public_path__ + \"static/media/welcome-tutor.66b32adc.png\";","import Cookies from 'universal-cookie';\r\nimport jwtDecode from 'jwt-decode';\r\nconst cookies = new Cookies();\r\n\r\nexport const getAccountInfo = () => {\r\n  let account = null;\r\n  const accessToken = cookies.get('access_token');\r\n  if (accessToken) {\r\n    account = jwtDecode(accessToken);\r\n  }\r\n  return account;\r\n}\r\n\r\nexport const removeAccountInfo = () => {\r\n  cookies.remove('access_token');\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { getAccountInfo } from '../lib/utils/getAccountInfo';\r\nexport const AccountContext = createContext(null);\r\n\r\nconst initialAccount = null;\r\n\r\nconst AccountContextProvider = (props) => {\r\n  const [account, setAccount] = useState(initialAccount);\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('remember'))) {\r\n      const existAccount = getAccountInfo();\r\n      if (existAccount) {\r\n        setAccount(existAccount);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const onLogin = (accountData) => {\r\n    setAccount(accountData);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    setAccount(null);\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider value={{account, onLogin, onLogout}} {...props} />\r\n  )\r\n}\r\n\r\nexport default AccountContextProvider;","import React from 'react';\r\nimport styles from './FooterContent.module.css';\r\nimport { GithubOutlined, FacebookFilled,  InstagramOutlined } from '@ant-design/icons';\r\nexport default function Footer() {\r\n  return (\r\n    <div className={styles.footerContent}>\r\n      <div className={styles.contactIconContainer}>\r\n        <GithubOutlined className={styles.contactIcon} style={{fontSize: 35}} onClick={ () =>  window.open('https://github.com/huynguyend191')} />\r\n        <FacebookFilled className={styles.contactIcon} style={{fontSize: 35}} onClick={ () =>  window.open('https://www.facebook.com/sneezingcat191')} />\r\n        <InstagramOutlined className={styles.contactIcon} style={{fontSize: 35}} onClick={() =>  window.open('https://www.instagram.com/sneezingcat191/')} />\r\n      </div>\r\n      <div className={styles.contactInfoContainer}>\r\n        <p>Mirage 2020 - English Video Call Platform</p>\r\n        <p>Contact: huynguyend191@gmail.com</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst baseURL = \"https://mirage-video-call.herokuapp.com/api\"\r\n\r\nconst axiosRequest = axios.create({\r\n  baseURL,\r\n  withCredentials: true\r\n});\r\n\r\nexport default axiosRequest;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Modal, Form, Input, Button } from 'antd';\r\nimport styles from './RegisterModal.module.css';\r\nimport welcomeStudentImg from '../../assets/welcome-student.png';\r\nimport welcomeTutorImg from '../../assets/welcome-tutor.png';\r\nimport axios from '../../lib/utils/axiosConfig';\r\nimport { AccountContext } from '../../context/AccountContext';\r\n\r\nexport default function RegisterModal(props) {\r\n  const [isStudent, setIsStudent] = useState(props.isStudent);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const { onLogin } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    setIsStudent(props.isStudent)\r\n  }, [props.isStudent])\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      const url = isStudent? '/students' : '/tutors';\r\n      const accountInfo = {\r\n        username: values.username,\r\n        password: values.password,\r\n        email: values.email,\r\n        name: values.name\r\n      };\r\n      const result = await axios.post(url + '/register', accountInfo);\r\n      setLoading(false);\r\n      onLogin(result.data.account);\r\n      localStorage.setItem('remember', true);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  const switchRole = () => {\r\n    setIsStudent(!isStudent);\r\n  };\r\n  const switchMode = () => {\r\n    props.onClose();\r\n    props.onSwitchLogin();\r\n  };\r\n  const onClose = () => {\r\n    form.resetFields();\r\n    props.onClose();\r\n  }\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  const studentWelcome = (\r\n    <div className={styles.registerWelcomeContent}>\r\n      <img className={styles.welcomeImg} draggable={false} src={welcomeStudentImg} alt=\"\" />\r\n      <h3>Experience new way of studying English</h3>\r\n      <h4>Improve your English anywhere anytime</h4>\r\n      <h4>Learn from interesting people around the world</h4>\r\n    </div>\r\n  )\r\n  \r\n  const tutorWelcome = (\r\n    <div className={styles.registerWelcomeContent}>\r\n      <img className={styles.welcomeImg} draggable={false} src={welcomeTutorImg} alt=\"\" />\r\n      <h3>Tutoring with Mirage is fun & rewarding</h3>\r\n      <h4>No experience necessary</h4>\r\n      <h4>Share your knowledge with people and get paid</h4>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.isVisible}\r\n      footer={null}\r\n      title=\"Register\"\r\n      onCancel={onClose}\r\n      width=\"800px\"\r\n    >\r\n      <div className={styles.registerContent}>\r\n        <div className={styles.registerWelcome}>\r\n          {\r\n            isStudent?\r\n            <div>{studentWelcome}</div> :\r\n            <div>{tutorWelcome}</div>\r\n          }\r\n        </div>\r\n        <div className={styles.formWrapper}>\r\n          <Form\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            className={styles.registerForm}\r\n            form={form}\r\n            {...formItemLayout}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              rules={[{ required: true, message: 'Please input your username!', whitespace: false }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label=\"Confirm Password\"\r\n              dependencies={['password']}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject('The two passwords that you entered do not match!');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Full name\"\r\n              rules={[{ required: true, message: 'Please input your fullname!', whitespace: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\" className={styles.registerButton} shape=\"round\" disabled={loading}>\r\n                Register\r\n              </Button>\r\n              <p className={styles.switchModeWrapper}>Or<span onClick={switchRole} className={styles.switchMode}> become a {isStudent? \"tutor\" : \"student\"} instead</span></p>\r\n              <p className={styles.switchModeWrapper}>Already have an account? <span onClick={switchMode} className={styles.switchMode}> Login</span></p>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Modal, Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport styles from './LoginModal.module.css';\r\nimport { AccountContext } from '../../context/AccountContext';\r\nimport axios from '../../lib/utils/axiosConfig';\r\n\r\nexport default function LoginModal({ isVisible, onClose, onSwitchRegister }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const { onLogin } = useContext(AccountContext);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      const account = {\r\n        user: values.user,\r\n        password: values.password\r\n      };\r\n      localStorage.setItem('remember', values.remember);\r\n      const result = await axios.post('/accounts/login', account);\r\n      setLoading(false);\r\n      onLogin(result.data.account);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const onChangeMode = () => {\r\n    onClose();\r\n    onSwitchRegister(true);\r\n  }\r\n\r\n  const onCancle = () => {\r\n    form.resetFields()\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      visible={isVisible}\r\n      footer={null}\r\n      onCancel={onCancle}\r\n      title=\"Login\"\r\n      width=\"400px\"\r\n    >\r\n      <Form\r\n        name=\"normal_login\"\r\n        className={styles.loginForm}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        form={form}\r\n      >\r\n        <Form.Item\r\n          name=\"user\"\r\n          rules={[{ required: true, message: 'Please input your username or email!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username or email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your Password!' }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className={styles.loginForgot} href=\"/\">\r\n            Forgot password\r\n        </a>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className={styles.loginButton} shape=\"round\" disabled={loading}>\r\n            Log in\r\n        </Button>\r\n        Or <span className={styles.registerNow} onClick={onChangeMode}>register now!</span>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styles from './Default.module.css';\r\nimport { Button, Layout, Divider } from 'antd';\r\nimport FooterContent from '../../components/FooterContent';\r\nimport introImg from '../../assets/flame-welcome.png';\r\nimport headerIcon from '../../assets/app-logo.png';\r\nimport RegisterModal from './RegisterModal';\r\nimport LoginModal from './LoginModal';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport default function Default() {\r\n  const [isRegister, setRegister] = useState(false);\r\n  const [isLogin, setLogin] = useState(false);\r\n  const [isStudent, setIsStudent] = useState(true);\r\n  const showRegister = (isStudent) => {\r\n    setIsStudent(isStudent);\r\n    setRegister(true);\r\n  };\r\n  const hideRegister = () => {\r\n    setRegister(false);\r\n  };\r\n  const showLogin = () => {\r\n    setLogin(true);\r\n  };\r\n  const hideLogin = () => {\r\n    setLogin(false);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <LoginModal isVisible={isLogin} onClose={hideLogin} onSwitchRegister={showRegister} />\r\n      <RegisterModal isVisible={isRegister} onClose={hideRegister} isStudent={isStudent} onSwitchLogin={showLogin} />\r\n      <Header>\r\n        <div className={styles.headerContent}>\r\n          <div className={styles.headerWrapper}>\r\n            <img className={styles.headerIcon} src={headerIcon} draggable={false} alt=\"\" />\r\n            <h1 className={styles.headerTitle}>MIRAGE</h1>\r\n          </div>\r\n          <div className={styles.userButtonContainer}>\r\n            <Button className={styles.userButton} type=\"secondary\" shape=\"round\" onClick={() => showLogin()}>Login</Button>\r\n            <Button className={styles.userButton} type=\"primary\" shape=\"round\" onClick={() => showRegister(true)}>Register</Button>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n      <Content>\r\n        <div className={styles.defaultBody}>\r\n          <div className={styles.introContainer}> \r\n            <img className={styles.introImg} draggable={false} src={introImg} alt=\"\" />\r\n            <div className={styles.introContent}>\r\n              <p className={styles.welcomeText}>Welcome to Mirage!</p>\r\n              <p className={styles.welcomeDescription}>“Go on, say something in English!”</p>\r\n              <Button className={styles.registerButton} type=\"primary\" shape=\"round\" onClick={() => showRegister(true)}>STUDY NOW</Button>\r\n              <Divider style={{ width: \"300px\" }}>OR</Divider>\r\n              <Button className={styles.registerButton} type=\"secondary\" shape=\"round\" onClick={() => showRegister(false)}>BECOME TUTOR</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Content>\r\n      <Footer>\r\n        <FooterContent />\r\n      </Footer>\r\n    </Layout>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <div>\r\n      Student\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Tutor() {\r\n  return (\r\n    <div>\r\n      Tutor\r\n    </div>\r\n  )\r\n}\r\n","export const ROLES = Object.freeze({\r\n  ADMIN: 1,\r\n  TUTOR: 2,\r\n  STUDENT: 3\r\n});","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { AccountContext } from '../context/AccountContext';\r\nimport Default from '../pages/default/Default';\r\nimport Student from '../pages/student/Student';\r\nimport Tutor from '../pages/tutor/Tutor';\r\nimport { ROLES } from '../lib/constants';\r\n\r\nexport default function Router() {\r\n  const { account } = useContext(AccountContext);\r\n  if (account && account.role === ROLES.STUDENT) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/student\" component={Student} />\r\n        <Redirect to=\"/student\" />\r\n      </Switch>\r\n    );\r\n  } else if (account && account.role === ROLES.TUTOR) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/tutor\" component={Tutor} />\r\n        <Redirect to=\"/tutor\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Default} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AccountContextProvider from './context/AccountContext';\r\nimport Router from './components/Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AccountContextProvider>\r\n        <Router />\r\n      </AccountContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'antd/dist/antd.css'\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContent\":\"FooterContent_footerContent__s5e35\",\"contactIcon\":\"FooterContent_contactIcon__3BLxb\",\"contactInfoContainer\":\"FooterContent_contactInfoContainer__5Bz7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginModal_loginForm__k3Oti\",\"loginForgot\":\"LoginModal_loginForgot__2_5ns\",\"loginButton\":\"LoginModal_loginButton__1aglI\",\"registerNow\":\"LoginModal_registerNow__1RUyQ\"};"],"sourceRoot":""}